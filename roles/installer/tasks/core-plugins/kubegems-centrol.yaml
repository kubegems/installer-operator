- name: Core Plugins | Get Secrets from Kubernetes
  kubernetes.core.k8s_info:
    api_version: "v1"
    kind: Secret
    name: gems-secret
    namespace: gemcloud-system
  register: gems_secret

- name: Core Plugins | Generate Password if secret is not password
  when: (gems_secret.resources | length == 0)
  kubernetes.core.k8s:
    state: present
    apply: yes
    definition: "{{ lookup('template', item) | from_yaml }}"
  with_items:
    - kubegems/password.secret.yaml

- name: Core Plugins | KubeGems Service
  kubernetes.core.k8s:
    state: present
    apply: yes
    definition: "{{ lookup('template', item) | from_yaml }}"
  with_items:
    - kubegems/mysql/pvc.yaml
    - kubegems/mysql/deploy.yaml
    - kubegems/mysql/service.yaml
    #- kubegems/minio/secret.yaml
    #- kubegems/minio/pvc.yaml
    #- kubegems/minio/deployment.yaml
    #- kubegems/minio/service.yaml
    - kubegems/redis/pvc.yaml
    - kubegems/redis/configmap.yaml
    - kubegems/redis/configmap-health.yaml
    - kubegems/redis/configmap-script.yaml
    - kubegems/redis/deploy.yaml
    - kubegems/redis/service.yaml
    - kubegems/gitea/pvc.yaml
    - kubegems/gitea/secret.config.yaml
    - kubegems/gitea/secret.init.yaml
    - kubegems/gitea/deploy.yaml
    - kubegems/gitea/service.yaml
    - kubegems/chartmuseum/pvc.yaml
    - kubegems/chartmuseum/deploy.yaml
    - kubegems/chartmuseum/service.yaml
    - kubegems/service/issuer.yaml
    - kubegems/service/certification.yaml
    - kubegems/service/deploy.yaml
    - kubegems/service/service.yaml

- name: Core Plugins | Lookup kubeGems Service Config
  set_fact:
    gems_service_config: "{{ gems_service_config | default({}) | combine({ item | basename : lookup('file', item) }) }}"
  with_fileglob: "kubegems/service/*"
  notify:
    - Scale down KubeGems Service
    - Scale up KubeGems Service

- name: Core Plugins | Apply Gems Service Config
  kubernetes.core.k8s:
    state: present
    apply: yes
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: gems-service-config
        namespace: gemcloud-system
      data: "{{ gems_service_config }}"

- name: Core Plugins | KubeGems Msgbus
  kubernetes.core.k8s:
    state: present
    apply: yes
    definition: "{{ lookup('template', item) | from_yaml }}"
  with_items:
    - kubegems/msgbus/deploy.yaml
    - kubegems/msgbus/service.yaml

- name: Core Plugins | KubeGems Worker
  kubernetes.core.k8s:
    state: present
    apply: yes
    definition: "{{ lookup('template', item) | from_yaml }}"
  with_items:
    - kubegems/worker/deploy.yaml
    - kubegems/worker/service.yaml

- name: Core Plugins | KubeGems Dashboard
  kubernetes.core.k8s:
    state: present
    apply: yes
    definition: "{{ lookup('template', item) | from_yaml }}"
  with_items:
    - kubegems/dashboard/deploy.yaml
    - kubegems/dashboard/service.yaml