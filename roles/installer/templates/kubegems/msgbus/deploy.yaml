#jinja2:lstrip_blocks: True
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: gems-msgbus
  name: gems-msgbus
  namespace: gemcloud-system
spec:
  replicas: {{ core_plugins.kubegems_centrol.operator.gems_msgbus.replicas | default('1') }}
  selector:
    matchLabels:
      app.kubernetes.io/name: gems-msgbus
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gems-msgbus
    spec:
      affinity:
        podAffinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: gems-msgbus
                namespaces:
                  - "gemcloud-system"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
      containers:
      - name: gems-msgbus
        image: "{{ global.repository | default('docker.io')}}/kubegems:{{ core_plugins.kubegems_local.details.version | default('latest') }}"
        imagePullPolicy: IfNotPresent
        args:
        - msgbus
        - --jwt-cert=/certs/jwt/tls.crt
        - --jwt-key=/certs/jwt/tls.key
        - --system-listen=:8080
        env:
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql-root-password
              name: gems-secret
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: gems-secret
        - name: GIT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: gitea-root-password
              name: gems-secret
        - name: ARGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: argo-admin-password
              name: gems-secret
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
          name: http-8080
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - mountPath: /certs/jwt
          name: gems-jwt-certs
        - mountPath: /etc/localtime
          name: timezone
      {% if gloabl.imagepullsecret is defined %}
      imagePullSecrets:
      - name: {{ global.imagepullsecret | default('kubegems') }}
      {% endif %}
      restartPolicy: Always
      volumes:
      - name: gems-jwt-certs
        secret:
          secretName: gems-service-certs-secret
      - hostPath:
          path: /etc/localtime
        name: timezone
